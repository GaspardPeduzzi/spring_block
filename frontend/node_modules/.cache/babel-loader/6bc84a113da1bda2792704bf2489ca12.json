{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Textarea = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Textarea = exports.Textarea = function (_React$Component) {\n  _inherits(Textarea, _React$Component);\n\n  function Textarea() {\n    _classCallCheck(this, Textarea);\n\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Textarea).apply(this, arguments));\n  }\n\n  _createClass(Textarea, [{\n    key: 'renderLabel',\n    value: function renderLabel() {\n      if (!this.props.label) {\n        return null;\n      }\n\n      return _react2.default.createElement('label', null, this.props.label);\n    }\n  }, {\n    key: 'renderTextarea',\n    value: function renderTextarea() {\n      return _react2.default.createElement('textarea', {\n        className: 'form-control',\n        name: this.props.name,\n        value: this.props.value,\n        placeholder: this.props.placeholder,\n        onChange: this.props.onChange,\n        disabled: this.props.disabled,\n        ref: 'textarea'\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement('div', {\n        className: 'form-group ' + this.props.className\n      }, this.renderLabel(), this.renderTextarea());\n    }\n  }]);\n\n  return Textarea;\n}(_react2.default.Component);\n\nTextarea.propTypes = {\n  name: _react2.default.PropTypes.string,\n  className: _react2.default.PropTypes.string,\n  placeholder: _react2.default.PropTypes.string,\n  label: _react2.default.PropTypes.string,\n  onChange: _react2.default.PropTypes.func.isRequired,\n  disabled: _react2.default.PropTypes.bool,\n  value: _react2.default.PropTypes.node.isRequired\n};\nTextarea.defaultProps = {\n  name: '',\n  className: '',\n  value: '',\n  disabled: false\n};","map":null,"metadata":{},"sourceType":"script"}