{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Modal = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _button = require('./button');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Modal = exports.Modal = function (_React$Component) {\n  _inherits(Modal, _React$Component);\n\n  function Modal() {\n    _classCallCheck(this, Modal);\n\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Modal).apply(this, arguments));\n  }\n\n  _createClass(Modal, [{\n    key: 'getHeaderClass',\n    value: function getHeaderClass() {\n      switch (this.props.type) {\n        case 'success':\n          return 'success';\n\n        case 'primary':\n          return 'primary';\n\n        case 'remove':\n        case 'danger':\n          return 'danger';\n\n        case 'info':\n          return 'info';\n\n        case 'warning':\n          return 'warning';\n\n        default:\n          throw new Error('Unknown Modal Type');\n      }\n    }\n  }, {\n    key: 'getBodyAlignment',\n    value: function getBodyAlignment() {\n      switch (this.props.align) {\n        case 'center':\n          return 'text-center';\n\n        case 'right':\n          return 'text-right';\n\n        case 'left':\n        default:\n          return '';\n      }\n    }\n  }, {\n    key: 'renderIcon',\n    value: function renderIcon() {\n      if (!this.props.icon) {\n        return null;\n      }\n\n      return _react2.default.createElement('i', {\n        className: this.props.icon\n      });\n    }\n  }, {\n    key: 'renderModalSize',\n    value: function renderModalSize() {\n      switch (this.props.size) {\n        case 'xs':\n        case 'extra-small':\n          return 'xsmall-panel';\n\n        case 'sm':\n        case 'small':\n          return 'small-panel';\n\n        case 'md':\n        case 'medium':\n          return 'medium-panel';\n\n        case 'lg':\n        case 'large':\n          return 'large-panel';\n\n        case 'auto':\n        case 'none':\n        default:\n          return '';\n      }\n    }\n  }, {\n    key: 'renderHeader',\n    value: function renderHeader() {\n      return _react2.default.createElement('div', {\n        className: 'modal-header bg-' + this.getHeaderClass()\n      }, this.renderIcon(), ' ', this.props.title);\n    }\n  }, {\n    key: 'renderBody',\n    value: function renderBody() {\n      return _react2.default.createElement('div', {\n        className: 'modal-body ' + this.getBodyAlignment()\n      }, _react2.default.createElement('div', null, this.props.children));\n    }\n  }, {\n    key: 'renderFooter',\n    value: function renderFooter() {\n      if (!this.props.onClose) {\n        return null;\n      }\n\n      return _react2.default.createElement('div', {\n        className: 'modal-footer'\n      }, _react2.default.createElement(_button.Button, {\n        type: this.props.type,\n        isIconHidden: true,\n        size: 'sm',\n        title: this.props.buttonText ? this.props.buttonText : 'OK',\n        onClick: this.props.onClose\n      }));\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement('div', null, _react2.default.createElement('div', {\n        className: 'fade ' + (this.props.isOpen ? 'modal-backdrop in' : '')\n      }), _react2.default.createElement('div', {\n        className: 'modal fade ' + (this.props.isOpen ? 'modal-open in' : '') + ' ' + this.props.className + ' ' + this.renderModalSize()\n      }, _react2.default.createElement('div', {\n        className: 'modal-dialog'\n      }, _react2.default.createElement('div', {\n        className: 'modal-content'\n      }, this.renderHeader(), this.renderBody(), this.renderFooter()))));\n    }\n  }]);\n\n  return Modal;\n}(_react2.default.Component);\n\nModal.propTypes = {\n  title: _react2.default.PropTypes.string,\n  buttonText: _react2.default.PropTypes.string,\n  className: _react2.default.PropTypes.string,\n  size: _react2.default.PropTypes.string,\n  icon: _react2.default.PropTypes.string,\n  align: _react2.default.PropTypes.string,\n  type: _react2.default.PropTypes.string,\n  onClose: _react2.default.PropTypes.func,\n  isOpen: _react2.default.PropTypes.bool\n};\nModal.defaultProps = {\n  className: '',\n  size: 'md',\n  align: 'left',\n  title: '',\n  type: 'success',\n  isOpen: false,\n  icon: ''\n};","map":null,"metadata":{},"sourceType":"script"}