{"ast":null,"code":"var _jsxFileName = \"/Users/hugo/springblock/src/views/history.js\";\nimport React, { Component } from \"react\";\nimport { Page, Panel, Table, TableHead, TableBody, TableRow, Pagination } from 'react-blur-admin';\nimport { Row, Col } from 'react-flex-proto';\nimport { Doughnut, Line } from 'react-chartjs-2';\nexport class History extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chromeVisits: 1000,\n      currentPage: 1\n    };\n  }\n\n  onSetCurrentPage(value) {\n    this.setState({\n      currentPage: value\n    });\n  }\n\n  render() {\n    return React.createElement(Page, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        margin: \"1em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Panel, {\n      title: \"Recent Transactions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Exchange Pair (OfferCreate)\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Cycle Size\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Volume\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Gap Size\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Timestamp\")), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"XRP/ETH \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"3 \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"129.049033 XRP\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"0.030340 XRP\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"17/11/2019 13:29\")), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"XRP/USD \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"2 \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"123.049033 XRP\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"0.030340 XRP\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"17/11/2019 13:22\")), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"ETH/GBP \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"4 \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"0.2049033 ETH\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"0.0130340 ETH\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"17/11/2019 12:45\")), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"ETH/GBP \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"4 \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"0.2049033 ETH\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"0.0130340 ETH\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"17/11/2019 12:15\")), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"ETH/GBP \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"4 \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"0.2049033 ETH\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"0.0130340 ETH\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"17/11/2019 12:05\")), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"ETH/GBP \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"4 \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"0.2049033 ETH\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"0.0130340 ETH\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"17/11/2019 11:15\")), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"ETH/GBP \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"4 \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"0.2049033 ETH\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"0.0130340 ETH\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"17/11/2019 11:04\")))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Col, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Pagination, {\n      currentPage: Number(this.state.currentPage),\n      totalPages: 5,\n      onChange: value => this.onSetCurrentPage(value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        margin: \"0.1em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Panel, {\n      title: \"Freqently Mispriced\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Doughnut, {\n      data: data,\n      options: {\n        legend: {\n          labels: {\n            fontColor: 'white'\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Panel, {\n      title: \"Gap Size (profit per tx)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Line, {\n      data: lineData,\n      options: options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })))));\n  }\n\n}\nconst data = {\n  labels: ['XRP/USD', 'XRP/BTC', 'BTC/CNY'],\n  datasets: [{\n    data: [300, 50, 100],\n    backgroundColor: ['#0e8174', '#005562', '#ffffff'],\n    hoverBackgroundColor: ['#0b6d62', '#004853', '#d8d8d8']\n  }],\n  legend: {\n    labels: {\n      fontColor: 'white'\n    }\n  }\n};\nconst lineData = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [{\n    label: 'Gap Size (XRP)',\n    color: \"white\",\n    fill: false,\n    lineTension: 0.1,\n    backgroundColor: 'rgba(75,192,192,0.4)',\n    borderColor: 'rgba(75,192,192,1)',\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: 'rgba(75,192,192,1)',\n    pointBackgroundColor: '#fff',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10,\n    data: [0.0825, 0.0625, 0.0725, 0.080, 0.058, 0.0525, 0.0525]\n  }]\n};\nconst options = {\n  legend: {\n    labels: {\n      fontColor: 'white'\n    }\n  },\n  scales: {\n    xAxes: [{\n      ticks: {\n        fontColor: \"white\"\n      }\n    }],\n    yAxes: [{\n      ticks: {\n        fontColor: \"white\"\n      }\n    }]\n  }\n};","map":{"version":3,"sources":["/Users/hugo/springblock/src/views/history.js"],"names":["React","Component","Page","Panel","Table","TableHead","TableBody","TableRow","Pagination","Row","Col","Doughnut","Line","History","constructor","props","state","chromeVisits","currentPage","onSetCurrentPage","value","setState","render","margin","Number","data","legend","labels","fontColor","lineData","options","datasets","backgroundColor","hoverBackgroundColor","label","color","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","scales","xAxes","ticks","yAxes"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { Page, Panel, Table, TableHead, TableBody, TableRow, Pagination, } from 'react-blur-admin';\nimport {Row, Col} from 'react-flex-proto';\nimport {Doughnut, Line} from 'react-chartjs-2';\n\nexport class History extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            chromeVisits: 1000,\n            currentPage: 1,\n        };\n    }\n\n    onSetCurrentPage(value) {\n        this.setState({currentPage: value});\n    }\n\n    render() {\n        return (\n            <Page>\n                <div className=\"row\" style={{margin:\"1em\"}}>\n                <Panel title='Recent Transactions'>\n                    <Table>\n                        <TableHead>\n                            <th>Exchange Pair (OfferCreate)</th>\n                            <th>Cycle Size</th>\n                            <th>Volume</th>\n                            <th>Gap Size</th>\n                            <th>Timestamp</th>\n                        </TableHead>\n                        <TableBody>\n                            <TableRow>\n                                <td>XRP/ETH </td>\n                                <td>3 </td>\n                                <td>129.049033 XRP</td>\n                                <td>0.030340 XRP</td>\n                                <td>17/11/2019 13:29</td>\n                            </TableRow>\n                            <TableRow>\n                                <td>XRP/USD </td>\n                                <td>2 </td>\n                                <td>123.049033 XRP</td>\n                                <td>0.030340 XRP</td>\n                                <td>17/11/2019 13:22</td>\n                            </TableRow>\n                            <TableRow>\n                                <td>ETH/GBP </td>\n                                <td>4 </td>\n                                <td>0.2049033 ETH</td>\n                                <td>0.0130340 ETH</td>\n                                <td>17/11/2019 12:45</td>\n                            </TableRow>\n                            <TableRow>\n                                <td>ETH/GBP </td>\n                                <td>4 </td>\n                                <td>0.2049033 ETH</td>\n                                <td>0.0130340 ETH</td>\n                                <td>17/11/2019 12:15</td>\n                            </TableRow>\n                            <TableRow>\n                                <td>ETH/GBP </td>\n                                <td>4 </td>\n                                <td>0.2049033 ETH</td>\n                                <td>0.0130340 ETH</td>\n                                <td>17/11/2019 12:05</td>\n                            </TableRow>\n                            <TableRow>\n                                <td>ETH/GBP </td>\n                                <td>4 </td>\n                                <td>0.2049033 ETH</td>\n                                <td>0.0130340 ETH</td>\n                                <td>17/11/2019 11:15</td>\n                            </TableRow>\n                            <TableRow>\n                                <td>ETH/GBP </td>\n                                <td>4 </td>\n                                <td>0.2049033 ETH</td>\n                                <td>0.0130340 ETH</td>\n                                <td>17/11/2019 11:04</td>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                    <Row>\n                        <Col align='center'>\n                            <Pagination currentPage={Number(this.state.currentPage)} totalPages={5} onChange={value => this.onSetCurrentPage(value)} />\n                        </Col>\n                    </Row>\n                </Panel>\n            </div>\n                <div className=\"row\" style={{margin:\"0.1em\"}}>\n                    <div className=\"col-lg-6\">\n                        <Panel title=\"Freqently Mispriced\">\n                            <Doughnut data={data} options={{legend: {\n                                labels: {\n                                fontColor: 'white'\n                            }}}}/>\n                        </Panel>\n                    </div>\n                    <div className=\"col-lg-6\">\n                        <Panel title=\"Gap Size (profit per tx)\">\n                            <Line data={lineData} options={options}/>\n                        </Panel>\n                    </div>\n                </div>\n            </Page>\n\n        )\n    }\n}\n\n\nconst data = {\n    labels: [\n        'XRP/USD',\n        'XRP/BTC',\n        'BTC/CNY'\n    ],\n    datasets: [{\n        data: [300, 50, 100],\n        backgroundColor: [\n            '#0e8174',\n            '#005562',\n            '#ffffff'\n        ],\n        hoverBackgroundColor: [\n            '#0b6d62',\n            '#004853',\n            '#d8d8d8'\n        ]\n    }],\n    legend: {\n        labels: {\n            fontColor: 'white'\n        }\n    }\n};\n\nconst lineData = {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n        {\n            label: 'Gap Size (XRP)',\n            color: \"white\",\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: 'rgba(75,192,192,0.4)',\n            borderColor: 'rgba(75,192,192,1)',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: 'rgba(75,192,192,1)',\n            pointBackgroundColor: '#fff',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: [0.0825, 0.0625, 0.0725, 0.080, 0.058, 0.0525, 0.0525]\n        }\n    ],\n\n};\n\nconst options = {\n    legend: {\n        labels: {\n            fontColor: 'white'\n        }\n    },\n    scales: {\n        xAxes: [{\n            ticks: {\n                fontColor: \"white\",\n            }\n        }],\n        yAxes: [{\n            ticks: {\n                fontColor: \"white\",\n            }\n        }]\n    }\n}"]},"metadata":{},"sourceType":"module"}