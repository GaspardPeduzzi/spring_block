{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Notification = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Notification = exports.Notification = function (_React$Component) {\n  _inherits(Notification, _React$Component);\n\n  function Notification(props) {\n    _classCallCheck(this, Notification);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Notification).call(this, props));\n\n    _this.onMouseEnter = _this.onMouseEnter.bind(_this);\n    _this.onMouseLeave = _this.onMouseLeave.bind(_this);\n    return _this;\n  }\n\n  _createClass(Notification, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (this.props.timeout) {\n        this.timer = setTimeout(this.props.onClose, this.props.timeout);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.timer) {\n        clearTimeout(this.timer);\n      }\n\n      if (this.extendedTimer) {\n        clearTimeout(this.extendedTimer);\n      }\n    }\n  }, {\n    key: 'onMouseEnter',\n    value: function onMouseEnter() {\n      if (this.timer) {\n        clearTimeout(this.timer);\n      }\n    }\n  }, {\n    key: 'onMouseLeave',\n    value: function onMouseLeave() {\n      this.extendedTimer = setTimeout(this.props.onClose, this.props.extendedTimeout);\n    }\n  }, {\n    key: 'renderCloseButton',\n    value: function renderCloseButton() {\n      if (!this.props.closeButton) {\n        return null;\n      }\n\n      return _react2.default.createElement('button', {\n        className: 'toast-close-button',\n        onClick: this.props.onClose\n      }, 'Ã—');\n    }\n  }, {\n    key: 'renderTitle',\n    value: function renderTitle() {\n      if (!this.props.title) {\n        return null;\n      }\n\n      return _react2.default.createElement('div', {\n        className: 'toast-title'\n      }, this.props.title);\n    }\n  }, {\n    key: 'renderBody',\n    value: function renderBody() {\n      return _react2.default.createElement('div', {\n        className: 'toast-body'\n      }, this.props.children);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement('div', {\n        className: 'toast toast-' + this.props.type,\n        onClick: this.props.tapToDismiss ? this.props.onClose : null,\n        onMouseEnter: this.onMouseEnter,\n        onMouseLeave: this.onMouseLeave\n      }, this.renderCloseButton(), _react2.default.createElement('div', null, this.renderTitle(), this.renderBody()));\n    }\n  }]);\n\n  return Notification;\n}(_react2.default.Component);\n\nNotification.propTypes = {\n  title: _react2.default.PropTypes.string,\n  type: _react2.default.PropTypes.oneOf(['success', 'warning', 'error', 'info']),\n  timeout: _react2.default.PropTypes.number,\n  extendedTimeout: _react2.default.PropTypes.number,\n  closeButton: _react2.default.PropTypes.bool,\n  tapToDismiss: _react2.default.PropTypes.bool,\n  onClose: _react2.default.PropTypes.func.isRequired\n};\nNotification.defaultProps = {\n  title: '',\n  type: 'info',\n  timeout: 5000,\n  extendedTimeout: 2000,\n  allowHtml: true,\n  closeButton: true,\n  tapToDismiss: true\n};","map":null,"metadata":{},"sourceType":"script"}