{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Input = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Input = exports.Input = function (_React$Component) {\n  _inherits(Input, _React$Component);\n\n  function Input() {\n    _classCallCheck(this, Input);\n\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Input).apply(this, arguments));\n  }\n\n  _createClass(Input, [{\n    key: 'getValidationResult',\n    value: function getValidationResult() {\n      if (!this.props.onValidate) {\n        return '';\n      }\n\n      var validationResult = this.props.onValidate(this.props.value);\n\n      if (validationResult === true || validationResult === 'success') {\n        return 'success';\n      } else if (validationResult === false || validationResult === 'error') {\n        return 'error';\n      } else if (validationResult === 'warning') {\n        return 'warning';\n      }\n\n      return '';\n    }\n    /**\n     * [getFeedback - determine if we should show the feedback icon on the right]\n     * @return {string}\n     */\n\n  }, {\n    key: 'getFeedback',\n    value: function getFeedback() {\n      if (!this.props.hasFeedbackIcon) {\n        return '';\n      }\n\n      return 'has-feedback';\n    }\n  }, {\n    key: 'getStatus',\n    value: function getStatus(status) {\n      return status ? 'has-' + status : '';\n    }\n  }, {\n    key: 'renderTopLabel',\n    value: function renderTopLabel() {\n      if (!this.props.label) {\n        return null;\n      }\n\n      if (_lodash2.default.includes(['checkbox', 'radio'], this.props.type)) {\n        return null;\n      }\n\n      return _react2.default.createElement('label', {\n        className: 'control-label',\n        htmlFor: this.props.id\n      }, this.props.label);\n    }\n  }, {\n    key: 'renderAddonLeft',\n    value: function renderAddonLeft() {\n      if (!this.props.addonLeft) {\n        return null;\n      }\n\n      return _react2.default.createElement('span', {\n        className: 'input-group-addon input-group-addon-primary addon-left'\n      }, this.props.addonLeft);\n    }\n  }, {\n    key: 'renderCheckbox',\n    value: function renderCheckbox() {\n      var _this2 = this;\n\n      var validationResult = this.getValidationResult();\n      var className = validationResult ? 'has-' + validationResult : '';\n      return _react2.default.createElement('div', {\n        className: className\n      }, _react2.default.createElement('div', {\n        className: 'checkbox'\n      }, _react2.default.createElement('label', {\n        className: 'custom-checkbox'\n      }, _react2.default.createElement('input', {\n        type: 'checkbox',\n        disabled: this.props.disabled,\n        checked: this.props.value,\n        onClick: function onClick(e) {\n          return _this2.props.onChange(!_this2.props.value);\n        },\n        ref: 'input'\n      }), _react2.default.createElement('span', null, this.props.label))));\n    }\n  }, {\n    key: 'renderRadio',\n    value: function renderRadio() {\n      var _this3 = this;\n\n      return _react2.default.createElement('label', {\n        className: 'radio-inline custom-radio nowrap'\n      }, _react2.default.createElement('input', {\n        disabled: this.props.disabled,\n        type: 'radio',\n        name: this.props.name,\n        value: this.props.value,\n        defaultChecked: this.props.defaultChecked,\n        onClick: function onClick(e) {\n          return _this3.props.onChange(_this3.props.value);\n        },\n        ref: 'input'\n      }), _react2.default.createElement('span', null, this.props.label));\n    }\n  }, {\n    key: 'renderInput',\n    value: function renderInput() {\n      if (_lodash2.default.includes(['checkbox', 'radio'], this.props.type)) {\n        return this['render' + _lodash2.default.startCase(this.props.type)]();\n      }\n\n      return _react2.default.createElement('input', {\n        disabled: this.props.disabled,\n        type: this.props.type,\n        placeholder: this.props.placeholder,\n        autoFocus: this.props.autoFocus,\n        className: 'form-control ' + (this.props.isRounded ? 'form-control-rounded' : ''),\n        key: this.props.id,\n        onChange: this.props.onChange,\n        onKeyDown: this.props.onKeyDown,\n        value: this.props.value,\n        ref: 'input'\n      });\n    }\n  }, {\n    key: 'renderInputNoWrapper',\n    value: function renderInputNoWrapper() {\n      if (!(this.props.addonLeft || this.props.addonRight)) {\n        return this.renderInput();\n      }\n\n      return null;\n    }\n  }, {\n    key: 'renderAddonRight',\n    value: function renderAddonRight() {\n      if (!this.props.addonRight) {\n        return null;\n      }\n\n      return _react2.default.createElement('span', {\n        className: 'input-group-addon input-group-addon-primary addon-right'\n      }, this.props.addonRight);\n    }\n  }, {\n    key: 'renderFeedbackIcon',\n    value: function renderFeedbackIcon(status) {\n      if (!(status && this.props.hasFeedbackIcon) || this.props.addonRight) {\n        return null;\n      }\n\n      if (_lodash2.default.includes(['checkbox', 'radio'], this.props.type)) {\n        return null;\n      }\n\n      var icon = void 0;\n\n      if (status === 'success') {\n        icon = 'fa-check-circle';\n      } else if (status === 'error') {\n        icon = 'fa-times-circle';\n      } else {\n        icon = 'fa-exclamation-triangle';\n      }\n\n      return _react2.default.createElement('i', {\n        className: 'fa ' + icon + ' form-control-feedback'\n      });\n    }\n  }, {\n    key: 'renderHelpBlock',\n    value: function renderHelpBlock() {\n      if (!this.props.helpLabel) {\n        return null;\n      }\n\n      return _react2.default.createElement('div', {\n        className: 'help-block sub-little-text'\n      }, this.props.helpLabel);\n    }\n  }, {\n    key: 'renderInputWrapper',\n    value: function renderInputWrapper() {\n      if (!(this.props.addonLeft || this.props.addonRight)) {\n        return null;\n      }\n\n      return _react2.default.createElement('div', {\n        className: 'input-group'\n      }, this.renderAddonLeft(), this.renderInput(), this.renderAddonRight());\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var status = this.getValidationResult(); // '', warning, success, error\n\n      return _react2.default.createElement('div', {\n        className: 'form-group ' + this.props.className + ' ' + this.getFeedback() + ' ' + this.getStatus(status)\n      }, this.renderTopLabel(), this.renderInputWrapper(), this.renderInputNoWrapper(), this.renderFeedbackIcon(status), this.renderHelpBlock());\n    }\n  }]);\n\n  return Input;\n}(_react2.default.Component);\n\nInput.propTypes = {\n  type: _react2.default.PropTypes.string,\n  id: _react2.default.PropTypes.string,\n  name: _react2.default.PropTypes.string,\n  className: _react2.default.PropTypes.string,\n  placeholder: _react2.default.PropTypes.string,\n  helpLabel: _react2.default.PropTypes.string,\n  label: _react2.default.PropTypes.string,\n  addonLeft: _react2.default.PropTypes.node,\n  addonRight: _react2.default.PropTypes.node,\n  autoFocus: _react2.default.PropTypes.bool,\n  hasFeedbackIcon: _react2.default.PropTypes.bool,\n  onValidate: _react2.default.PropTypes.func,\n  onKeyDown: _react2.default.PropTypes.func,\n  defaultChecked: _react2.default.PropTypes.bool,\n  value: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.number, _react2.default.PropTypes.string, _react2.default.PropTypes.bool]).isRequired,\n  onChange: _react2.default.PropTypes.func.isRequired,\n  disabled: _react2.default.PropTypes.bool,\n  isRounded: _react2.default.PropTypes.bool\n};\nInput.defaultProps = {\n  className: '',\n  value: '',\n  type: 'text',\n  hasFeedbackIcon: true,\n  disabled: false,\n  onKeyDown: _lodash2.default.noop,\n  autoFocus: false\n};","map":null,"metadata":{},"sourceType":"script"}