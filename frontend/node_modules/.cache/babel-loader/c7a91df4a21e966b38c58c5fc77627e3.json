{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Button = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Button = exports.Button = function (_React$Component) {\n  _inherits(Button, _React$Component);\n\n  function Button() {\n    _classCallCheck(this, Button);\n\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Button).apply(this, arguments));\n  }\n\n  _createClass(Button, [{\n    key: 'renderIcon',\n    value: function renderIcon(icon) {\n      if (!(icon || this.props.icon) || this.props.isIconHidden) {\n        return null;\n      }\n\n      if (this.props.icon) {\n        return _lodash2.default.isString(this.props.icon) ? _react2.default.createElement('i', {\n          className: this.props.icon\n        }) : this.props.icon;\n      }\n\n      return _react2.default.createElement('i', {\n        className: icon\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var classes = void 0;\n      var icon = void 0;\n      var title = void 0;\n\n      switch (this.props.type) {\n        case 'add':\n        case 'primary':\n          classes = 'btn-primary btn-' + this.props.size;\n          icon = 'fa fa-plus';\n          title = 'Add';\n          break;\n\n        case 'success':\n          classes = 'btn-success btn-' + this.props.size;\n          icon = 'fa fa-check';\n          title = 'Success';\n          break;\n\n        case 'remove':\n        case 'danger':\n          classes = 'btn-danger btn-' + this.props.size;\n          icon = 'fa fa-minus';\n          title = 'Remove';\n          break;\n\n        case 'info':\n          classes = 'btn-info btn-' + this.props.size;\n          icon = 'fa fa-info-circle';\n          title = 'Info';\n          break;\n\n        case 'warning':\n          classes = 'btn-warning btn-' + this.props.size;\n          icon = 'fa fa-exclamation-circle';\n          title = 'Warning';\n          break;\n\n        case 'default':\n        default:\n          classes = 'btn-default btn-' + this.props.size;\n          icon = '';\n          title = 'Default';\n          break;\n      }\n\n      return _react2.default.createElement('button', {\n        className: 'btn ' + classes,\n        disabled: this.props.disabled,\n        onClick: this.props.onClick\n      }, this.renderIcon(icon), ' ', this.props.hasOwnProperty('title') ? this.props.title : title);\n    }\n  }]);\n\n  return Button;\n}(_react2.default.Component);\n\nButton.propTypes = {\n  type: _react2.default.PropTypes.string,\n  onClick: _react2.default.PropTypes.func,\n  title: _react2.default.PropTypes.string,\n  size: _react2.default.PropTypes.oneOf(['xs', 'sm', 'mm', 'md', 'xm', 'lg']),\n  disabled: _react2.default.PropTypes.bool,\n  isIconHidden: _react2.default.PropTypes.bool,\n  icon: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.element])\n};\nButton.defaultProps = {\n  onClick: function noop() {},\n  size: 'md',\n  disabled: false,\n  isIconHidden: false,\n  icon: null\n};","map":null,"metadata":{},"sourceType":"script"}