{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Select = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Select = exports.Select = function (_React$Component) {\n  _inherits(Select, _React$Component);\n\n  function Select(props) {\n    _classCallCheck(this, Select);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Select).call(this, props));\n\n    _this.state = {\n      value: _this.getValue(),\n      activeIndex: 0,\n      isOpen: _this.props.isOpen,\n      searchValue: '',\n      visibleOptions: _this.props.options\n    };\n    return _this;\n  } // used when the parent needs to know that isOpen was toggled\n\n\n  _createClass(Select, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.onFocus();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.isOpen !== this.props.isOpen) {\n        this.setState({\n          isOpen: nextProps.isOpen\n        }, this.onFocus);\n      }\n\n      if (nextProps.options !== this.props.options) {\n        this.setState({\n          visibleOptions: nextProps.options,\n          searchValue: ''\n        });\n      }\n\n      if (this.props.value && !nextProps.value) {\n        this.setState({\n          activeIndex: 0,\n          value: this.getValue(nextProps)\n        });\n      }\n\n      this.setState({\n        value: this.getValue(nextProps)\n      });\n    }\n  }, {\n    key: 'onFocus',\n    value: function onFocus() {\n      if (this.state.isOpen && this.props.isSearchable) {\n        this.refs['select-search'].focus();\n      }\n    }\n  }, {\n    key: 'onToggleOpen',\n    value: function onToggleOpen() {\n      this.props.onToggleOpen(!this.state.isOpen);\n      this.setState({\n        isOpen: !this.state.isOpen\n      }, this.onFocus);\n    }\n  }, {\n    key: 'onSetActiveIndex',\n    value: function onSetActiveIndex(value) {\n      this.setState({\n        activeIndex: value,\n        isOpen: true\n      }, this.onFocus);\n    }\n  }, {\n    key: 'onSelectValue',\n    value: function onSelectValue(selectedValue) {\n      var selectedOpt = _lodash2.default.find(this.props.options, {\n        value: selectedValue\n      });\n\n      var value = selectedOpt && selectedOpt.label ? selectedOpt.label : this.props.placeholder;\n      this.setState({\n        isOpen: false,\n        value: value\n      });\n      this.props.onChange(selectedValue);\n    }\n  }, {\n    key: 'onTextSearch',\n    value: function onTextSearch(event) {\n      var visibleOptions = void 0;\n      var searchValue = event.currentTarget.value; // Used if the developer needs custom search functionality.\n\n      if (this.props.onSearch) {\n        visibleOptions = this.props.onSearch(searchValue, this.props.options);\n      } else {\n        visibleOptions = this.getVisibleOptions(event.currentTarget.value);\n      }\n\n      this.setState({\n        searchValue: searchValue,\n        visibleOptions: visibleOptions\n      });\n    }\n  }, {\n    key: 'onHandleKeyDown',\n    value: function onHandleKeyDown(e) {\n      var _this2 = this;\n\n      if (e.keyCode === 27) {\n        // esc\n        return this.onToggleOpen();\n      } else if (e.keyCode === 13) {\n        // enter\n        e.preventDefault(); // prevent the onClick event from firing also, which could reopen select options\n\n        var selectedOption = _lodash2.default.find(this.state.visibleOptions, function (option, index) {\n          return index === _this2.state.activeIndex;\n        });\n\n        if (selectedOption) {\n          return this.onSelectValue(selectedOption.value);\n        }\n      } else if (e.keyCode === 40) {\n        // down\n        e.preventDefault(); // prevent browser scrolling\n\n        var activeIndex = this.state.activeIndex + 1;\n\n        if (activeIndex >= this.state.visibleOptions.length) {\n          activeIndex = this.state.visibleOptions.length - 1; // - 1 because the index starts at 0\n        }\n\n        return this.onSetActiveIndex(activeIndex);\n      } else if (e.keyCode === 38) {\n        // up\n        e.preventDefault(); // prevent browser scrolling\n\n        var _activeIndex = this.state.activeIndex - 1;\n\n        if (_activeIndex < 0) {\n          _activeIndex = 0;\n        }\n\n        return this.onSetActiveIndex(_activeIndex);\n      }\n\n      return e;\n    }\n  }, {\n    key: 'getValue',\n    value: function getValue() {\n      var props = arguments.length <= 0 || arguments[0] === undefined ? this.props : arguments[0];\n\n      if (props.value && props.onRenderValue) {\n        return props.onRenderValue(props.value);\n      }\n\n      var option = _lodash2.default.find(props.options, {\n        value: props.value\n      });\n\n      return option && option.label || props.placeholder;\n    }\n  }, {\n    key: 'getVisibleOptions',\n    value: function getVisibleOptions(searchValue) {\n      if (!searchValue) {\n        return this.props.options;\n      }\n\n      return _lodash2.default.filter(this.props.options, function (option) {\n        return option.label.toLowerCase().indexOf(searchValue.toLowerCase()) !== -1;\n      });\n    }\n  }, {\n    key: 'isOpen',\n    value: function isOpen() {\n      return this.state.isOpen ? 'open' : '';\n    }\n  }, {\n    key: 'renderValue',\n    value: function renderValue() {\n      return _react2.default.createElement('span', {\n        className: 'filter-option pull-left'\n      }, this.state.value);\n    }\n  }, {\n    key: 'renderSearch',\n    value: function renderSearch() {\n      var _this3 = this;\n\n      if (!this.props.isSearchable) {\n        return null;\n      }\n\n      return _react2.default.createElement('div', {\n        className: 'bs-searchbox'\n      }, _react2.default.createElement('input', {\n        ref: 'select-search',\n        type: 'text',\n        className: 'form-control',\n        value: this.state.searchValue,\n        onKeyDown: function onKeyDown(e) {\n          return _this3.onHandleKeyDown(e);\n        },\n        onChange: function onChange(e) {\n          return _this3.onTextSearch(e);\n        }\n      }));\n    }\n  }, {\n    key: 'renderOption',\n    value: function renderOption(option, index, isSelected, isActive) {\n      var _this4 = this;\n\n      return _react2.default.createElement('li', {\n        key: index,\n        className: isSelected + ' ' + isActive,\n        onClick: function onClick(e) {\n          return _this4.onSelectValue(option.value);\n        },\n        onMouseOver: function onMouseOver(e) {\n          return _this4.onSetActiveIndex(index);\n        }\n      }, _react2.default.createElement('a', {\n        tabIndex: index\n      }, _react2.default.createElement('i', {\n        className: isSelected ? 'fa fa-check' : ''\n      }), ' ', _react2.default.createElement('span', {\n        className: 'text'\n      }, option.label)));\n    }\n  }, {\n    key: 'renderOptions',\n    value: function renderOptions() {\n      var _this5 = this;\n\n      if (!this.props.options) {\n        return null;\n      }\n\n      var options = _lodash2.default.map(this.state.visibleOptions, function (option, index) {\n        var isSelected = _this5.props.value === option.value ? 'selected' : '';\n        var isActive = _this5.state.activeIndex === index ? 'active' : '';\n        return _this5.renderOption(option, index, isSelected, isActive);\n      });\n\n      var style = {};\n\n      if (this.props.maxHeight) {\n        style = {\n          maxHeight: this.props.maxHeight,\n          overflow: 'auto'\n        };\n      }\n\n      return _react2.default.createElement('ul', {\n        style: style,\n        className: 'dropdown-menu inner'\n      }, options);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this6 = this;\n\n      return _react2.default.createElement('div', {\n        className: 'form-group'\n      }, _react2.default.createElement('div', {\n        className: 'btn-group bootstrap-select form-control ' + this.isOpen()\n      }, _react2.default.createElement('button', {\n        type: 'button',\n        className: 'btn dropdown-toggle btn-default',\n        onClick: function onClick(e) {\n          return _this6.onToggleOpen();\n        },\n        onKeyDown: function onKeyDown(e) {\n          return _this6.onHandleKeyDown(e);\n        }\n      }, this.renderValue(), _react2.default.createElement('span', {\n        className: 'bs-caret'\n      }, _react2.default.createElement('span', {\n        className: 'caret'\n      }))), _react2.default.createElement('div', {\n        className: 'dropdown-menu open'\n      }, this.renderSearch(), this.renderOptions())));\n    }\n  }]);\n\n  return Select;\n}(_react2.default.Component);\n\nSelect.propTypes = {\n  placeholder: _react2.default.PropTypes.string,\n  maxHeight: _react2.default.PropTypes.string,\n  onChange: _react2.default.PropTypes.func,\n  onRenderValue: _react2.default.PropTypes.func,\n  options: _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.shape({\n    value: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.number]),\n    label: _react2.default.PropTypes.node\n  })),\n  value: _react2.default.PropTypes.node,\n  isSearchable: _react2.default.PropTypes.bool,\n  isOpen: _react2.default.PropTypes.bool,\n  onSearch: _react2.default.PropTypes.func,\n  onToggleOpen: _react2.default.PropTypes.func\n};\nSelect.defaultProps = {\n  placeholder: '',\n  onChange: _lodash2.default.noop,\n  value: '',\n  isSearchable: false,\n  isOpen: false,\n  onToggleOpen: _lodash2.default.noop\n};","map":null,"metadata":{},"sourceType":"script"}